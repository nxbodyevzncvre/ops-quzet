{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nxbodyevzncvre/pet-proj/ops-quzet/quzet/src/app/page.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [activeSection, setActiveSection] = useState(1); // Секция, которая активна\n\n  const sections = [\n    { id: 1, title: \"Section 1\", color: \"bg-blue-200\" },\n    { id: 2, title: \"Section 2\", color: \"bg-green-200\" },\n    { id: 3, title: \"Section 3\", color: \"bg-yellow-200\" },\n    { id: 4, title: \"Section 4\", color: \"bg-red-200\" },\n  ];\n\n  const handleScroll = () => {\n    // Получаем текущую прокрутку\n    const scrollY = window.scrollY;\n\n    // Находим видимую секцию\n    const currentSection = sections.find((section) => {\n      const element = document.getElementById(`section-${section.id}`);\n      const { top, bottom } = element.getBoundingClientRect();\n      // Проверяем, находится ли секция в пределах видимости\n      return top <= window.innerHeight / 2 && bottom >= window.innerHeight / 2;\n    });\n\n    if (currentSection) {\n      setActiveSection(currentSection.id);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <div className=\"flex h-screen\">\n      {/* Вертикальная шкала с цифрами */}\n      <div className=\"w-12 fixed top-1/2 left-0 transform -translate-y-1/2 flex flex-col items-center space-y-4\">\n        {sections.map((section) => (\n          <div\n            key={section.id}\n            className={`text-lg font-bold ${\n              activeSection === section.id ? \"text-blue-600\" : \"text-gray-600\"\n            }`}\n          >\n            {section.id}\n          </div>\n        ))}\n      </div>\n\n      {/* Контент с секциями */}\n      <div className=\"w-full h-screen overflow-y-scroll pl-16 space-y-16\">\n        {sections.map((section) => (\n          <div\n            id={`section-${section.id}`}\n            key={section.id}\n            className={`h-screen ${section.color} flex items-center justify-center`}\n          >\n            <h1 className=\"text-4xl font-bold\">{section.title}</h1>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS;IACP,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,0BAA0B;IAEjF,MAAM,WAAW;QACf;YAAE,IAAI;YAAG,OAAO;YAAa,OAAO;QAAc;QAClD;YAAE,IAAI;YAAG,OAAO;YAAa,OAAO;QAAe;QACnD;YAAE,IAAI;YAAG,OAAO;YAAa,OAAO;QAAgB;QACpD;YAAE,IAAI;YAAG,OAAO;YAAa,OAAO;QAAa;KAClD;IAED,MAAM,eAAe;QACnB,6BAA6B;QAC7B,MAAM,UAAU,OAAO,OAAO;QAE9B,yBAAyB;QACzB,MAAM,iBAAiB,SAAS,IAAI,CAAC,CAAC;YACpC,MAAM,UAAU,SAAS,cAAc,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;YAC/D,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,QAAQ,qBAAqB;YACrD,sDAAsD;YACtD,OAAO,OAAO,OAAO,WAAW,GAAG,KAAK,UAAU,OAAO,WAAW,GAAG;QACzE;QAEA,IAAI,gBAAgB;YAClB,iBAAiB,eAAe,EAAE;QACpC;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,OAAO,gBAAgB,CAAC,UAAU;QAClC,OAAO,IAAM,OAAO,mBAAmB,CAAC,UAAU;IACpD,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;wBAEC,WAAW,CAAC,kBAAkB,EAC5B,kBAAkB,QAAQ,EAAE,GAAG,kBAAkB,iBACjD;kCAED,QAAQ,EAAE;uBALN,QAAQ,EAAE;;;;;;;;;;0BAWrB,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;wBACC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;wBAE3B,WAAW,CAAC,SAAS,EAAE,QAAQ,KAAK,CAAC,iCAAiC,CAAC;kCAEvE,cAAA,8OAAC;4BAAG,WAAU;sCAAsB,QAAQ,KAAK;;;;;;uBAH5C,QAAQ,EAAE;;;;;;;;;;;;;;;;AAS3B;uCAEe"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/nxbodyevzncvre/pet-proj/ops-quzet/quzet/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}